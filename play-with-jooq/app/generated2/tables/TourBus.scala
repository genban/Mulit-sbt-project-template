/**
 * This class is generated by jOOQ
 */
package generated2.tables


import generated2.Keys
import generated2.Tour
import generated2.tables.records.TourBusRecord

import java.lang.Class
import java.lang.Double
import java.lang.Integer
import java.lang.Short
import java.lang.String
import java.sql.Timestamp
import java.util.Arrays
import java.util.List

import javax.annotation.Generated

import org.jooq.Field
import org.jooq.Table
import org.jooq.TableField
import org.jooq.UniqueKey
import org.jooq.impl.TableImpl


object TourBus {

	/**
	 * The reference instance of <code>tour.TOUR_BUS</code>
	 */
	val TOUR_BUS = new TourBus
}

/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = Array(
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	),
	comments = "This class is generated by jOOQ"
)
class TourBus(alias : String, aliased : Table[TourBusRecord], parameters : Array[ Field[_] ]) extends TableImpl[TourBusRecord](alias, Tour.TOUR, aliased, parameters, "") {

	/**
	 * The class holding records for this type
	 */
	override def getRecordType : Class[TourBusRecord] = {
		classOf[TourBusRecord]
	}

	/**
	 * The column <code>tour.TOUR_BUS.ID</code>. info:旅游大巴信息表 ID
	 */
	val ID : TableField[TourBusRecord, String] = createField("ID", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false), "info:旅游大巴信息表 ID")

	/**
	 * The column <code>tour.TOUR_BUS.BUSNUM</code>. info:旅游大巴信息表 车牌号
	 */
	val BUSNUM : TableField[TourBusRecord, String] = createField("BUSNUM", org.jooq.impl.SQLDataType.VARCHAR.length(9).nullable(false), "info:旅游大巴信息表 车牌号")

	/**
	 * The column <code>tour.TOUR_BUS.PEOPLES</code>. info:旅游大巴信息表 可搭载人数
	 */
	val PEOPLES : TableField[TourBusRecord, Short] = createField("PEOPLES", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), "info:旅游大巴信息表 可搭载人数")

	/**
	 * The column <code>tour.TOUR_BUS.NOWPEOPLE</code>. info:旅游大巴信息表 实际人数
	 */
	val NOWPEOPLE : TableField[TourBusRecord, Short] = createField("NOWPEOPLE", org.jooq.impl.SQLDataType.SMALLINT.defaulted(true), "info:旅游大巴信息表 实际人数")

	/**
	 * The column <code>tour.TOUR_BUS.CONTACT</code>. info:旅游大巴信息表 联系人
	 */
	val CONTACT : TableField[TourBusRecord, String] = createField("CONTACT", org.jooq.impl.SQLDataType.VARCHAR.length(24), "info:旅游大巴信息表 联系人")

	/**
	 * The column <code>tour.TOUR_BUS.PHONE</code>. info:旅游大巴信息表 联系电话
	 */
	val PHONE : TableField[TourBusRecord, String] = createField("PHONE", org.jooq.impl.SQLDataType.VARCHAR.length(24), "info:旅游大巴信息表 联系电话")

	/**
	 * The column <code>tour.TOUR_BUS.COLOR</code>. info:旅游大巴信息表 颜色
	 */
	val COLOR : TableField[TourBusRecord, String] = createField("COLOR", org.jooq.impl.SQLDataType.VARCHAR.length(12), "info:旅游大巴信息表 颜色")

	/**
	 * The column <code>tour.TOUR_BUS.ECONTYPE</code>. info:旅游大巴信息表 经济类型
	 */
	val ECONTYPE : TableField[TourBusRecord, String] = createField("ECONTYPE", org.jooq.impl.SQLDataType.VARCHAR.length(66), "info:旅游大巴信息表 经济类型")

	/**
	 * The column <code>tour.TOUR_BUS.ROADTRANSPORT</code>. info:旅游大巴信息表 道路运输
	 */
	val ROADTRANSPORT : TableField[TourBusRecord, String] = createField("ROADTRANSPORT", org.jooq.impl.SQLDataType.VARCHAR.length(10), "info:旅游大巴信息表 道路运输")

	/**
	 * The column <code>tour.TOUR_BUS.ENTERPRISECODE</code>. info:旅游大巴信息表 业户编码
	 */
	val ENTERPRISECODE : TableField[TourBusRecord, String] = createField("ENTERPRISECODE", org.jooq.impl.SQLDataType.VARCHAR.length(80), "info:旅游大巴信息表 业户编码")

	/**
	 * The column <code>tour.TOUR_BUS.TRANTYPE</code>. info:旅游大巴信息表 运输类别
	 */
	val TRANTYPE : TableField[TourBusRecord, String] = createField("TRANTYPE", org.jooq.impl.SQLDataType.VARCHAR.length(9), "info:旅游大巴信息表 运输类别")

	/**
	 * The column <code>tour.TOUR_BUS.CARLEVEL</code>. info:旅游大巴信息表 客车级别
	 */
	val CARLEVEL : TableField[TourBusRecord, String] = createField("CARLEVEL", org.jooq.impl.SQLDataType.VARCHAR.length(9), "info:旅游大巴信息表 客车级别")

	/**
	 * The column <code>tour.TOUR_BUS.CARTYPE</code>. info:旅游大巴信息表 客车类型
	 */
	val CARTYPE : TableField[TourBusRecord, String] = createField("CARTYPE", org.jooq.impl.SQLDataType.VARCHAR.length(12), "info:旅游大巴信息表 客车类型")

	/**
	 * The column <code>tour.TOUR_BUS.TECHNOLOGYLEVEL</code>. info:旅游大巴信息表 技术等级
	 */
	val TECHNOLOGYLEVEL : TableField[TourBusRecord, String] = createField("TECHNOLOGYLEVEL", org.jooq.impl.SQLDataType.VARCHAR.length(9), "info:旅游大巴信息表 技术等级")

	/**
	 * The column <code>tour.TOUR_BUS.BIGINTIME</code>. info:旅游大巴信息表 技术开始有效期
	 */
	val BIGINTIME : TableField[TourBusRecord, Timestamp] = createField("BIGINTIME", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), "info:旅游大巴信息表 技术开始有效期")

	/**
	 * The column <code>tour.TOUR_BUS.ENDTIME</code>. info:旅游大巴信息表 技术开始结束期
	 */
	val ENDTIME : TableField[TourBusRecord, Timestamp] = createField("ENDTIME", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), "info:旅游大巴信息表 技术开始结束期")

	/**
	 * The column <code>tour.TOUR_BUS.BUSINESSSCOPE</code>. info:旅游大巴信息表 经营范围
	 */
	val BUSINESSSCOPE : TableField[TourBusRecord, String] = createField("BUSINESSSCOPE", org.jooq.impl.SQLDataType.VARCHAR.length(218), "info:旅游大巴信息表 经营范围")

	/**
	 * The column <code>tour.TOUR_BUS.LONGITUDE</code>. info:旅游大巴信息表 最新精度
	 */
	val LONGITUDE : TableField[TourBusRecord, Double] = createField("LONGITUDE", org.jooq.impl.SQLDataType.DOUBLE.defaulted(true), "info:旅游大巴信息表 最新精度")

	/**
	 * The column <code>tour.TOUR_BUS.LATITUDE</code>. info:旅游大巴信息表 最新维度
	 */
	val LATITUDE : TableField[TourBusRecord, Double] = createField("LATITUDE", org.jooq.impl.SQLDataType.DOUBLE.defaulted(true), "info:旅游大巴信息表 最新维度")

	/**
	 * The column <code>tour.TOUR_BUS.SPEED</code>. info:旅游大巴信息表 速度
	 */
	val SPEED : TableField[TourBusRecord, Short] = createField("SPEED", org.jooq.impl.SQLDataType.SMALLINT.defaulted(true), "info:旅游大巴信息表 速度")

	/**
	 * The column <code>tour.TOUR_BUS.BTIME</code>. info:旅游大巴信息表 最新记录时间
	 */
	val BTIME : TableField[TourBusRecord, Timestamp] = createField("BTIME", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), "info:旅游大巴信息表 最新记录时间")

	/**
	 * The column <code>tour.TOUR_BUS.COUNTS</code>. info:旅游大巴信息表 统计实时轨迹数量
	 */
	val COUNTS : TableField[TourBusRecord, Integer] = createField("COUNTS", org.jooq.impl.SQLDataType.INTEGER.defaulted(true), "info:旅游大巴信息表 统计实时轨迹数量")

	/**
	 * The column <code>tour.TOUR_BUS.ALARM</code>. info:旅游大巴信息表 报警
	 */
	val ALARM : TableField[TourBusRecord, Integer] = createField("ALARM", org.jooq.impl.SQLDataType.INTEGER.defaulted(true), "info:旅游大巴信息表 报警")

	/**
	 * Create a <code>tour.TOUR_BUS</code> table reference
	 */
	def this() = {
		this("TOUR_BUS", null, null)
	}

	/**
	 * Create an aliased <code>tour.TOUR_BUS</code> table reference
	 */
	def this(alias : String) = {
		this(alias, generated2.tables.TourBus.TOUR_BUS, null)
	}

	private def this(alias : String, aliased : Table[TourBusRecord]) = {
		this(alias, aliased, null)
	}

	override def getPrimaryKey : UniqueKey[TourBusRecord] = {
		Keys.KEY_TOUR_BUS_PRIMARY
	}

	override def getKeys : List[ UniqueKey[TourBusRecord] ] = {
		return Arrays.asList[ UniqueKey[TourBusRecord] ](Keys.KEY_TOUR_BUS_PRIMARY)
	}

	override def as(alias : String) : TourBus = {
		new TourBus(alias, this)
	}

	/**
	 * Rename this table
	 */
	def rename(name : String) : TourBus = {
		new TourBus(name, null)
	}
}
