/**
 * This class is generated by jOOQ
 */
package generated2.tables.records


import generated2.tables.MeEnviprotect

import java.lang.Byte
import java.lang.Integer
import java.lang.Short
import java.lang.String
import java.sql.Timestamp

import javax.annotation.Generated

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record13
import org.jooq.Row13
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = Array(
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	),
	comments = "This class is generated by jOOQ"
)
class MeEnviprotectRecord extends UpdatableRecordImpl[MeEnviprotectRecord](MeEnviprotect.ME_ENVIPROTECT) with Record13[String, Short, Integer, Short, String, Byte, Short, Short, Short, Short, Short, String, Timestamp] {

	/**
	 * Setter for <code>tour.ME_ENVIPROTECT.ID</code>. info:PM2.5 ID
	 */
	def setId(value : String) : Unit = {
		setValue(0, value)
	}

	/**
	 * Getter for <code>tour.ME_ENVIPROTECT.ID</code>. info:PM2.5 ID
	 */
	def getId : String = {
		val r = getValue(0)
		if (r == null) null else r.asInstanceOf[String]
	}

	/**
	 * Setter for <code>tour.ME_ENVIPROTECT.AQI</code>. info:PM2.5 AQI值
	 */
	def setAqi(value : Short) : Unit = {
		setValue(1, value)
	}

	/**
	 * Getter for <code>tour.ME_ENVIPROTECT.AQI</code>. info:PM2.5 AQI值
	 */
	def getAqi : Short = {
		val r = getValue(1)
		if (r == null) null else r.asInstanceOf[Short]
	}

	/**
	 * Setter for <code>tour.ME_ENVIPROTECT.CITYCODE</code>. info:PM2.5 城市代码
	 */
	def setCitycode(value : Integer) : Unit = {
		setValue(2, value)
	}

	/**
	 * Getter for <code>tour.ME_ENVIPROTECT.CITYCODE</code>. info:PM2.5 城市代码
	 */
	def getCitycode : Integer = {
		val r = getValue(2)
		if (r == null) null else r.asInstanceOf[Integer]
	}

	/**
	 * Setter for <code>tour.ME_ENVIPROTECT.CO</code>. info:PM2.5 一氧化碳
	 */
	def setCo(value : Short) : Unit = {
		setValue(3, value)
	}

	/**
	 * Getter for <code>tour.ME_ENVIPROTECT.CO</code>. info:PM2.5 一氧化碳
	 */
	def getCo : Short = {
		val r = getValue(3)
		if (r == null) null else r.asInstanceOf[Short]
	}

	/**
	 * Setter for <code>tour.ME_ENVIPROTECT.FRESHTIME</code>. info:PM2.5 更新时间点
	 */
	def setFreshtime(value : String) : Unit = {
		setValue(4, value)
	}

	/**
	 * Getter for <code>tour.ME_ENVIPROTECT.FRESHTIME</code>. info:PM2.5 更新时间点
	 */
	def getFreshtime : String = {
		val r = getValue(4)
		if (r == null) null else r.asInstanceOf[String]
	}

	/**
	 * Setter for <code>tour.ME_ENVIPROTECT.LEVELS</code>. info:PM2.5 污染等级
	 */
	def setLevels(value : Byte) : Unit = {
		setValue(5, value)
	}

	/**
	 * Getter for <code>tour.ME_ENVIPROTECT.LEVELS</code>. info:PM2.5 污染等级
	 */
	def getLevels : Byte = {
		val r = getValue(5)
		if (r == null) null else r.asInstanceOf[Byte]
	}

	/**
	 * Setter for <code>tour.ME_ENVIPROTECT.NO_2</code>. info:PM2.5 二氧化氮
	 */
	def setNo_2(value : Short) : Unit = {
		setValue(6, value)
	}

	/**
	 * Getter for <code>tour.ME_ENVIPROTECT.NO_2</code>. info:PM2.5 二氧化氮
	 */
	def getNo_2 : Short = {
		val r = getValue(6)
		if (r == null) null else r.asInstanceOf[Short]
	}

	/**
	 * Setter for <code>tour.ME_ENVIPROTECT.O3</code>. info:PM2.5 臭氧
	 */
	def setO3(value : Short) : Unit = {
		setValue(7, value)
	}

	/**
	 * Getter for <code>tour.ME_ENVIPROTECT.O3</code>. info:PM2.5 臭氧
	 */
	def getO3 : Short = {
		val r = getValue(7)
		if (r == null) null else r.asInstanceOf[Short]
	}

	/**
	 * Setter for <code>tour.ME_ENVIPROTECT.PM2_5</code>. info:PM2.5 pm2.5值
	 */
	def setPm2_5(value : Short) : Unit = {
		setValue(8, value)
	}

	/**
	 * Getter for <code>tour.ME_ENVIPROTECT.PM2_5</code>. info:PM2.5 pm2.5值
	 */
	def getPm2_5 : Short = {
		val r = getValue(8)
		if (r == null) null else r.asInstanceOf[Short]
	}

	/**
	 * Setter for <code>tour.ME_ENVIPROTECT.PM_10</code>. info:PM2.5 pm10值
	 */
	def setPm_10(value : Short) : Unit = {
		setValue(9, value)
	}

	/**
	 * Getter for <code>tour.ME_ENVIPROTECT.PM_10</code>. info:PM2.5 pm10值
	 */
	def getPm_10 : Short = {
		val r = getValue(9)
		if (r == null) null else r.asInstanceOf[Short]
	}

	/**
	 * Setter for <code>tour.ME_ENVIPROTECT.SO_2</code>. info:PM2.5 二氧化硫
	 */
	def setSo_2(value : Short) : Unit = {
		setValue(10, value)
	}

	/**
	 * Getter for <code>tour.ME_ENVIPROTECT.SO_2</code>. info:PM2.5 二氧化硫
	 */
	def getSo_2 : Short = {
		val r = getValue(10)
		if (r == null) null else r.asInstanceOf[Short]
	}

	/**
	 * Setter for <code>tour.ME_ENVIPROTECT.TIMEPOINT</code>. info:PM2.5 更新时间段
	 */
	def setTimepoint(value : String) : Unit = {
		setValue(11, value)
	}

	/**
	 * Getter for <code>tour.ME_ENVIPROTECT.TIMEPOINT</code>. info:PM2.5 更新时间段
	 */
	def getTimepoint : String = {
		val r = getValue(11)
		if (r == null) null else r.asInstanceOf[String]
	}

	/**
	 * Setter for <code>tour.ME_ENVIPROTECT.UPDATEDTIME</code>.
	 */
	def setUpdatedtime(value : Timestamp) : Unit = {
		setValue(12, value)
	}

	/**
	 * Getter for <code>tour.ME_ENVIPROTECT.UPDATEDTIME</code>.
	 */
	def getUpdatedtime : Timestamp = {
		val r = getValue(12)
		if (r == null) null else r.asInstanceOf[Timestamp]
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------
	override def key() : Record1[String] = {
		return super.key.asInstanceOf[ Record1[String] ]
	}

	// -------------------------------------------------------------------------
	// Record13 type implementation
	// -------------------------------------------------------------------------

	override def fieldsRow : Row13[String, Short, Integer, Short, String, Byte, Short, Short, Short, Short, Short, String, Timestamp] = {
		super.fieldsRow.asInstanceOf[ Row13[String, Short, Integer, Short, String, Byte, Short, Short, Short, Short, Short, String, Timestamp] ]
	}

	override def valuesRow : Row13[String, Short, Integer, Short, String, Byte, Short, Short, Short, Short, Short, String, Timestamp] = {
		super.valuesRow.asInstanceOf[ Row13[String, Short, Integer, Short, String, Byte, Short, Short, Short, Short, Short, String, Timestamp] ]
	}
	override def field1 : Field[String] = MeEnviprotect.ME_ENVIPROTECT.ID
	override def field2 : Field[Short] = MeEnviprotect.ME_ENVIPROTECT.AQI
	override def field3 : Field[Integer] = MeEnviprotect.ME_ENVIPROTECT.CITYCODE
	override def field4 : Field[Short] = MeEnviprotect.ME_ENVIPROTECT.CO
	override def field5 : Field[String] = MeEnviprotect.ME_ENVIPROTECT.FRESHTIME
	override def field6 : Field[Byte] = MeEnviprotect.ME_ENVIPROTECT.LEVELS
	override def field7 : Field[Short] = MeEnviprotect.ME_ENVIPROTECT.NO_2
	override def field8 : Field[Short] = MeEnviprotect.ME_ENVIPROTECT.O3
	override def field9 : Field[Short] = MeEnviprotect.ME_ENVIPROTECT.PM2_5
	override def field10 : Field[Short] = MeEnviprotect.ME_ENVIPROTECT.PM_10
	override def field11 : Field[Short] = MeEnviprotect.ME_ENVIPROTECT.SO_2
	override def field12 : Field[String] = MeEnviprotect.ME_ENVIPROTECT.TIMEPOINT
	override def field13 : Field[Timestamp] = MeEnviprotect.ME_ENVIPROTECT.UPDATEDTIME
	override def value1 : String = getId
	override def value2 : Short = getAqi
	override def value3 : Integer = getCitycode
	override def value4 : Short = getCo
	override def value5 : String = getFreshtime
	override def value6 : Byte = getLevels
	override def value7 : Short = getNo_2
	override def value8 : Short = getO3
	override def value9 : Short = getPm2_5
	override def value10 : Short = getPm_10
	override def value11 : Short = getSo_2
	override def value12 : String = getTimepoint
	override def value13 : Timestamp = getUpdatedtime

	override def value1(value : String) : MeEnviprotectRecord = {
		setId(value)
		this
	}

	override def value2(value : Short) : MeEnviprotectRecord = {
		setAqi(value)
		this
	}

	override def value3(value : Integer) : MeEnviprotectRecord = {
		setCitycode(value)
		this
	}

	override def value4(value : Short) : MeEnviprotectRecord = {
		setCo(value)
		this
	}

	override def value5(value : String) : MeEnviprotectRecord = {
		setFreshtime(value)
		this
	}

	override def value6(value : Byte) : MeEnviprotectRecord = {
		setLevels(value)
		this
	}

	override def value7(value : Short) : MeEnviprotectRecord = {
		setNo_2(value)
		this
	}

	override def value8(value : Short) : MeEnviprotectRecord = {
		setO3(value)
		this
	}

	override def value9(value : Short) : MeEnviprotectRecord = {
		setPm2_5(value)
		this
	}

	override def value10(value : Short) : MeEnviprotectRecord = {
		setPm_10(value)
		this
	}

	override def value11(value : Short) : MeEnviprotectRecord = {
		setSo_2(value)
		this
	}

	override def value12(value : String) : MeEnviprotectRecord = {
		setTimepoint(value)
		this
	}

	override def value13(value : Timestamp) : MeEnviprotectRecord = {
		setUpdatedtime(value)
		this
	}

	override def values(value1 : String, value2 : Short, value3 : Integer, value4 : Short, value5 : String, value6 : Byte, value7 : Short, value8 : Short, value9 : Short, value10 : Short, value11 : Short, value12 : String, value13 : Timestamp) : MeEnviprotectRecord = {
		this.value1(value1)
		this.value2(value2)
		this.value3(value3)
		this.value4(value4)
		this.value5(value5)
		this.value6(value6)
		this.value7(value7)
		this.value8(value8)
		this.value9(value9)
		this.value10(value10)
		this.value11(value11)
		this.value12(value12)
		this.value13(value13)
		this
	}

	/**
	 * Create a detached, initialised MeEnviprotectRecord
	 */
	def this(id : String, aqi : Short, citycode : Integer, co : Short, freshtime : String, levels : Byte, no_2 : Short, o3 : Short, pm2_5 : Short, pm_10 : Short, so_2 : Short, timepoint : String, updatedtime : Timestamp) = {
		this()

		setValue(0, id)
		setValue(1, aqi)
		setValue(2, citycode)
		setValue(3, co)
		setValue(4, freshtime)
		setValue(5, levels)
		setValue(6, no_2)
		setValue(7, o3)
		setValue(8, pm2_5)
		setValue(9, pm_10)
		setValue(10, so_2)
		setValue(11, timepoint)
		setValue(12, updatedtime)
	}
}
