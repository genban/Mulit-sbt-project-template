/**
 * This class is generated by jOOQ
 */
package generated2.tables.records


import generated2.tables.TourBus

import java.lang.Double
import java.lang.Integer
import java.lang.Short
import java.lang.String
import java.sql.Timestamp

import javax.annotation.Generated

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = Array(
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	),
	comments = "This class is generated by jOOQ"
)
class TourBusRecord extends UpdatableRecordImpl[TourBusRecord](TourBus.TOUR_BUS) {

	/**
	 * Setter for <code>tour.TOUR_BUS.ID</code>. info:旅游大巴信息表 ID
	 */
	def setId(value : String) : Unit = {
		setValue(0, value)
	}

	/**
	 * Getter for <code>tour.TOUR_BUS.ID</code>. info:旅游大巴信息表 ID
	 */
	def getId : String = {
		val r = getValue(0)
		if (r == null) null else r.asInstanceOf[String]
	}

	/**
	 * Setter for <code>tour.TOUR_BUS.BUSNUM</code>. info:旅游大巴信息表 车牌号
	 */
	def setBusnum(value : String) : Unit = {
		setValue(1, value)
	}

	/**
	 * Getter for <code>tour.TOUR_BUS.BUSNUM</code>. info:旅游大巴信息表 车牌号
	 */
	def getBusnum : String = {
		val r = getValue(1)
		if (r == null) null else r.asInstanceOf[String]
	}

	/**
	 * Setter for <code>tour.TOUR_BUS.PEOPLES</code>. info:旅游大巴信息表 可搭载人数
	 */
	def setPeoples(value : Short) : Unit = {
		setValue(2, value)
	}

	/**
	 * Getter for <code>tour.TOUR_BUS.PEOPLES</code>. info:旅游大巴信息表 可搭载人数
	 */
	def getPeoples : Short = {
		val r = getValue(2)
		if (r == null) null else r.asInstanceOf[Short]
	}

	/**
	 * Setter for <code>tour.TOUR_BUS.NOWPEOPLE</code>. info:旅游大巴信息表 实际人数
	 */
	def setNowpeople(value : Short) : Unit = {
		setValue(3, value)
	}

	/**
	 * Getter for <code>tour.TOUR_BUS.NOWPEOPLE</code>. info:旅游大巴信息表 实际人数
	 */
	def getNowpeople : Short = {
		val r = getValue(3)
		if (r == null) null else r.asInstanceOf[Short]
	}

	/**
	 * Setter for <code>tour.TOUR_BUS.CONTACT</code>. info:旅游大巴信息表 联系人
	 */
	def setContact(value : String) : Unit = {
		setValue(4, value)
	}

	/**
	 * Getter for <code>tour.TOUR_BUS.CONTACT</code>. info:旅游大巴信息表 联系人
	 */
	def getContact : String = {
		val r = getValue(4)
		if (r == null) null else r.asInstanceOf[String]
	}

	/**
	 * Setter for <code>tour.TOUR_BUS.PHONE</code>. info:旅游大巴信息表 联系电话
	 */
	def setPhone(value : String) : Unit = {
		setValue(5, value)
	}

	/**
	 * Getter for <code>tour.TOUR_BUS.PHONE</code>. info:旅游大巴信息表 联系电话
	 */
	def getPhone : String = {
		val r = getValue(5)
		if (r == null) null else r.asInstanceOf[String]
	}

	/**
	 * Setter for <code>tour.TOUR_BUS.COLOR</code>. info:旅游大巴信息表 颜色
	 */
	def setColor(value : String) : Unit = {
		setValue(6, value)
	}

	/**
	 * Getter for <code>tour.TOUR_BUS.COLOR</code>. info:旅游大巴信息表 颜色
	 */
	def getColor : String = {
		val r = getValue(6)
		if (r == null) null else r.asInstanceOf[String]
	}

	/**
	 * Setter for <code>tour.TOUR_BUS.ECONTYPE</code>. info:旅游大巴信息表 经济类型
	 */
	def setEcontype(value : String) : Unit = {
		setValue(7, value)
	}

	/**
	 * Getter for <code>tour.TOUR_BUS.ECONTYPE</code>. info:旅游大巴信息表 经济类型
	 */
	def getEcontype : String = {
		val r = getValue(7)
		if (r == null) null else r.asInstanceOf[String]
	}

	/**
	 * Setter for <code>tour.TOUR_BUS.ROADTRANSPORT</code>. info:旅游大巴信息表 道路运输
	 */
	def setRoadtransport(value : String) : Unit = {
		setValue(8, value)
	}

	/**
	 * Getter for <code>tour.TOUR_BUS.ROADTRANSPORT</code>. info:旅游大巴信息表 道路运输
	 */
	def getRoadtransport : String = {
		val r = getValue(8)
		if (r == null) null else r.asInstanceOf[String]
	}

	/**
	 * Setter for <code>tour.TOUR_BUS.ENTERPRISECODE</code>. info:旅游大巴信息表 业户编码
	 */
	def setEnterprisecode(value : String) : Unit = {
		setValue(9, value)
	}

	/**
	 * Getter for <code>tour.TOUR_BUS.ENTERPRISECODE</code>. info:旅游大巴信息表 业户编码
	 */
	def getEnterprisecode : String = {
		val r = getValue(9)
		if (r == null) null else r.asInstanceOf[String]
	}

	/**
	 * Setter for <code>tour.TOUR_BUS.TRANTYPE</code>. info:旅游大巴信息表 运输类别
	 */
	def setTrantype(value : String) : Unit = {
		setValue(10, value)
	}

	/**
	 * Getter for <code>tour.TOUR_BUS.TRANTYPE</code>. info:旅游大巴信息表 运输类别
	 */
	def getTrantype : String = {
		val r = getValue(10)
		if (r == null) null else r.asInstanceOf[String]
	}

	/**
	 * Setter for <code>tour.TOUR_BUS.CARLEVEL</code>. info:旅游大巴信息表 客车级别
	 */
	def setCarlevel(value : String) : Unit = {
		setValue(11, value)
	}

	/**
	 * Getter for <code>tour.TOUR_BUS.CARLEVEL</code>. info:旅游大巴信息表 客车级别
	 */
	def getCarlevel : String = {
		val r = getValue(11)
		if (r == null) null else r.asInstanceOf[String]
	}

	/**
	 * Setter for <code>tour.TOUR_BUS.CARTYPE</code>. info:旅游大巴信息表 客车类型
	 */
	def setCartype(value : String) : Unit = {
		setValue(12, value)
	}

	/**
	 * Getter for <code>tour.TOUR_BUS.CARTYPE</code>. info:旅游大巴信息表 客车类型
	 */
	def getCartype : String = {
		val r = getValue(12)
		if (r == null) null else r.asInstanceOf[String]
	}

	/**
	 * Setter for <code>tour.TOUR_BUS.TECHNOLOGYLEVEL</code>. info:旅游大巴信息表 技术等级
	 */
	def setTechnologylevel(value : String) : Unit = {
		setValue(13, value)
	}

	/**
	 * Getter for <code>tour.TOUR_BUS.TECHNOLOGYLEVEL</code>. info:旅游大巴信息表 技术等级
	 */
	def getTechnologylevel : String = {
		val r = getValue(13)
		if (r == null) null else r.asInstanceOf[String]
	}

	/**
	 * Setter for <code>tour.TOUR_BUS.BIGINTIME</code>. info:旅游大巴信息表 技术开始有效期
	 */
	def setBigintime(value : Timestamp) : Unit = {
		setValue(14, value)
	}

	/**
	 * Getter for <code>tour.TOUR_BUS.BIGINTIME</code>. info:旅游大巴信息表 技术开始有效期
	 */
	def getBigintime : Timestamp = {
		val r = getValue(14)
		if (r == null) null else r.asInstanceOf[Timestamp]
	}

	/**
	 * Setter for <code>tour.TOUR_BUS.ENDTIME</code>. info:旅游大巴信息表 技术开始结束期
	 */
	def setEndtime(value : Timestamp) : Unit = {
		setValue(15, value)
	}

	/**
	 * Getter for <code>tour.TOUR_BUS.ENDTIME</code>. info:旅游大巴信息表 技术开始结束期
	 */
	def getEndtime : Timestamp = {
		val r = getValue(15)
		if (r == null) null else r.asInstanceOf[Timestamp]
	}

	/**
	 * Setter for <code>tour.TOUR_BUS.BUSINESSSCOPE</code>. info:旅游大巴信息表 经营范围
	 */
	def setBusinessscope(value : String) : Unit = {
		setValue(16, value)
	}

	/**
	 * Getter for <code>tour.TOUR_BUS.BUSINESSSCOPE</code>. info:旅游大巴信息表 经营范围
	 */
	def getBusinessscope : String = {
		val r = getValue(16)
		if (r == null) null else r.asInstanceOf[String]
	}

	/**
	 * Setter for <code>tour.TOUR_BUS.LONGITUDE</code>. info:旅游大巴信息表 最新精度
	 */
	def setLongitude(value : Double) : Unit = {
		setValue(17, value)
	}

	/**
	 * Getter for <code>tour.TOUR_BUS.LONGITUDE</code>. info:旅游大巴信息表 最新精度
	 */
	def getLongitude : Double = {
		val r = getValue(17)
		if (r == null) null else r.asInstanceOf[Double]
	}

	/**
	 * Setter for <code>tour.TOUR_BUS.LATITUDE</code>. info:旅游大巴信息表 最新维度
	 */
	def setLatitude(value : Double) : Unit = {
		setValue(18, value)
	}

	/**
	 * Getter for <code>tour.TOUR_BUS.LATITUDE</code>. info:旅游大巴信息表 最新维度
	 */
	def getLatitude : Double = {
		val r = getValue(18)
		if (r == null) null else r.asInstanceOf[Double]
	}

	/**
	 * Setter for <code>tour.TOUR_BUS.SPEED</code>. info:旅游大巴信息表 速度
	 */
	def setSpeed(value : Short) : Unit = {
		setValue(19, value)
	}

	/**
	 * Getter for <code>tour.TOUR_BUS.SPEED</code>. info:旅游大巴信息表 速度
	 */
	def getSpeed : Short = {
		val r = getValue(19)
		if (r == null) null else r.asInstanceOf[Short]
	}

	/**
	 * Setter for <code>tour.TOUR_BUS.BTIME</code>. info:旅游大巴信息表 最新记录时间
	 */
	def setBtime(value : Timestamp) : Unit = {
		setValue(20, value)
	}

	/**
	 * Getter for <code>tour.TOUR_BUS.BTIME</code>. info:旅游大巴信息表 最新记录时间
	 */
	def getBtime : Timestamp = {
		val r = getValue(20)
		if (r == null) null else r.asInstanceOf[Timestamp]
	}

	/**
	 * Setter for <code>tour.TOUR_BUS.COUNTS</code>. info:旅游大巴信息表 统计实时轨迹数量
	 */
	def setCounts(value : Integer) : Unit = {
		setValue(21, value)
	}

	/**
	 * Getter for <code>tour.TOUR_BUS.COUNTS</code>. info:旅游大巴信息表 统计实时轨迹数量
	 */
	def getCounts : Integer = {
		val r = getValue(21)
		if (r == null) null else r.asInstanceOf[Integer]
	}

	/**
	 * Setter for <code>tour.TOUR_BUS.ALARM</code>. info:旅游大巴信息表 报警
	 */
	def setAlarm(value : Integer) : Unit = {
		setValue(22, value)
	}

	/**
	 * Getter for <code>tour.TOUR_BUS.ALARM</code>. info:旅游大巴信息表 报警
	 */
	def getAlarm : Integer = {
		val r = getValue(22)
		if (r == null) null else r.asInstanceOf[Integer]
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------
	override def key() : Record1[String] = {
		return super.key.asInstanceOf[ Record1[String] ]
	}

	/**
	 * Create a detached, initialised TourBusRecord
	 */
	def this(id : String, busnum : String, peoples : Short, nowpeople : Short, contact : String, phone : String, color : String, econtype : String, roadtransport : String, enterprisecode : String, trantype : String, carlevel : String, cartype : String, technologylevel : String, bigintime : Timestamp, endtime : Timestamp, businessscope : String, longitude : Double, latitude : Double, speed : Short, btime : Timestamp, counts : Integer, alarm : Integer) = {
		this()

		setValue(0, id)
		setValue(1, busnum)
		setValue(2, peoples)
		setValue(3, nowpeople)
		setValue(4, contact)
		setValue(5, phone)
		setValue(6, color)
		setValue(7, econtype)
		setValue(8, roadtransport)
		setValue(9, enterprisecode)
		setValue(10, trantype)
		setValue(11, carlevel)
		setValue(12, cartype)
		setValue(13, technologylevel)
		setValue(14, bigintime)
		setValue(15, endtime)
		setValue(16, businessscope)
		setValue(17, longitude)
		setValue(18, latitude)
		setValue(19, speed)
		setValue(20, btime)
		setValue(21, counts)
		setValue(22, alarm)
	}
}
